ff --git a/fsevents.js b/fsevents.js
index 9f17e09..2d4a2a7 100644
--- a/fsevents.js
+++ b/fsevents.js
@@ -11,7 +11,7 @@ if (process.platform !== "darwin") {
 }
 
 const Native = require("./fsevents.node");
-const events = Native.constants;
+const constants = Native.constants;
 
 function watch(path, since, handler) {
   if (typeof path !== "string") {
@@ -50,9 +50,9 @@ function getInfo(path, flags) {
 }
 
 function getFileType(flags) {
-  if (events.ItemIsFile & flags) return "file";
-  if (events.ItemIsDir & flags) return "directory";
-  if (events.ItemIsSymlink & flags) return "symlink";
+  if (constants.ItemIsFile & flags) return "file";
+  if (constants.ItemIsDir & flags) return "directory";
+  if (constants.ItemIsSymlink & flags) return "symlink";
 }
 function anyIsTrue(obj) {
   for (let key in obj) {
@@ -61,24 +61,24 @@ function anyIsTrue(obj) {
   return false;
 }
 function getEventType(flags) {
-  if (events.ItemRemoved & flags) return "deleted";
-  if (events.ItemRenamed & flags) return "moved";
-  if (events.ItemCreated & flags) return "created";
-  if (events.ItemModified & flags) return "modified";
-  if (events.RootChanged & flags) return "root-changed";
-  if (events.ItemCloned & flags) return "cloned";
+  if (constants.ItemRemoved & flags) return "deleted";
+  if (constants.ItemRenamed & flags) return "moved";
+  if (constants.ItemCreated & flags) return "created";
+  if (constants.ItemModified & flags) return "modified";
+  if (constants.RootChanged & flags) return "root-changed";
+  if (constants.ItemCloned & flags) return "cloned";
   if (anyIsTrue(flags)) return "modified";
   return "unknown";
 }
 function getFileChanges(flags) {
   return {
-    inode: !!(events.ItemInodeMetaMod & flags),
-    finder: !!(events.ItemFinderInfoMod & flags),
-    access: !!(events.ItemChangeOwner & flags),
-    xattrs: !!(events.ItemXattrMod & flags),
+    inode: !!(constants.ItemInodeMetaMod & flags),
+    finder: !!(constants.ItemFinderInfoMod & flags),
+    access: !!(constants.ItemChangeOwner & flags),
+    xattrs: !!(constants.ItemXattrMod & flags),
   };
 }
 
 exports.watch = watch;
 exports.getInfo = getInfo;
-exports.constants = events;
+exports.constants = constants;
